name: CI

on: [push, pull_request]

jobs:
  test:
    name: "${{matrix.os}} | Config: '${{matrix.config}}', Build options: '${{matrix.options.build}}'"
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022"]
        options:
          - { build: "", llvm: false }
          - { build: "-T ClangCL", llvm: true }

        config: ["Debug", "Release"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Install LLVM
        if: matrix.options.llvm == true
        uses: KyleMayes/install-llvm-action@v2.0.2
        with:
          version: "18.1.3"

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{matrix.config}} ${{matrix.options.build}}

      - name: Build
        run: cmake --build build --config ${{matrix.config}}

      - name: Run tests
        run: cmake --build build --config ${{matrix.config}} --target run-libnum-test

      - name: Run assembly tests
        if: matrix.config == "Release"
        run: cmake --build build --config Release --target run-libnum-assembly-test
  
  clang-tidy:
    name: Clang Tidy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@v3.29.2
        with:
          cmakeVersion: "3.25"
          ninjaVersion: "latest"

      - name: Configure CMake
        run: >
          cmake -B build -G Ninja
          -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DLIBNUM_ENABLE_CLANG_TIDY=TRUE -DLIBNUM_ENABLE_SANITIZERS=FALSE

      - name: Analyze Code
        run: cmake --build build --target clang-tidy
